<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!--bean id="dataSourceMem" lazy-init="true" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="org.hsqldb.jdbcDriver" 
		/> <property name="url" value="jdbc:hsqldb:mem:mydb" /> <property name="username" 
		value="sa" /> <property name="password" value="" /> </bean -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/musicserver" />
		<property name="username" value="freerink" />
		<property name="password" value="geheim" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>name.reerink.musicserver.db.Artist</value>
				<value>name.reerink.musicserver.db.Album</value>
				<value>name.reerink.musicserver.db.Track</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<!--value>hibernate.hbm2ddl.auto=update</value -->
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.sql">false</prop>
			</props>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="callback" class="name.reerink.musicserver.MusicCallbackImpl">
		<property name="musicService" ref="musicService" />
	</bean>

	<bean id="traverser" class="name.reerink.musicserver.files.Traverser">
		<property name="directory" value="/mnt/data/Music/A" />
		<property name="callback" ref="callback" />
	</bean>


	<bean id="musicServer" class="name.reerink.musicserver.MusicServer">
		<!--property name="musicFolderPath" value="/mnt/data/Music/A" />
		<property name="musicService" ref="musicService" /-->
		<property name="traverser" ref="traverser" />
	</bean>

	<bean id="musicService" class="name.reerink.musicserver.service.MusicServiceImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="musicServiceOperation"
			expression="execution(* name.reerink.musicserver.service.MusicService.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="musicServiceOperation" />
	</aop:config>

</beans>